diff -x config.log -x config.status -ru tmp/fontutils-0.7/GNUmakefile.in work/fontutils-0.7/GNUmakefile.in
--- tmp/fontutils-0.7/GNUmakefile.in	2000-04-01 02:27:31.000000000 +0000
+++ work/fontutils-0.7/GNUmakefile.in	2012-10-28 19:44:06.308315360 +0000
@@ -21,7 +21,8 @@
 
 # Installation prefixes.  Since GNU programs and the TeX system may be
 # installed in different places, we have different prefixes.
-prefix = @prefix@
+DESTDIR =
+prefix = $(DESTDIR)@prefix@
 exec_prefix = @exec_prefix@
 
 # Installation directories.
@@ -127,7 +128,8 @@
   app_defaults=$(app_defaults) \
   INSTALL="$(INSTALL)" \
   INSTALL_DATA="$(INSTALL_DATA)" \
-  INSTALL_PROGRAM="$(INSTALL_PROGRAM)"
+  INSTALL_PROGRAM="$(INSTALL_PROGRAM)" \
+  prefix=$(prefix)
 
 install:
 	-mkdir $(prefix) $(exec_prefix) $(bindir) $(datadir) $(infodir) \
diff -x config.log -x config.status -ru tmp/fontutils-0.7/bpltobzr/main.c work/fontutils-0.7/bpltobzr/main.c
--- tmp/fontutils-0.7/bpltobzr/main.c	2000-03-28 00:48:09.000000000 +0000
+++ work/fontutils-0.7/bpltobzr/main.c	2012-10-28 19:41:29.351611712 +0000
@@ -42,7 +42,7 @@
 extern string version_string;
 
 static string read_command_line (int, string []);
-
+
 /* It would be nice if we could actually use Lisp to do this job.  The
    problem is not parsing the input -- we get that essentially for free,
    since property list syntax is Lisp syntax -- but in writing the
@@ -79,16 +79,16 @@
 /* This is defined in version.c.  */
 extern string version_string;
 
-#define USAGE "Options:
-<font_name> should be a filename, e.g., `cmr10'.  Any extension is ignored." \
-  GETOPT_USAGE								     \
-"help: print this message.
-output-file <filename>: output to <filename> (if it has a suffix) or to
-  <filename>.bzr (if it doesn't).
-range <char1>-<char2>: only work on characters between <char1> and
-  <char2> inclusive.
-verbose: print brief progress reports on stderr.
-version: print the version number of this program.
+#define USAGE "Options:\
+<font_name> should be a filename, e.g., `cmr10'.  Any extension is ignored."\
+  GETOPT_USAGE\
+"help: print this message.\
+output-file <filename>: output to <filename> (if it has a suffix) or to\
+  <filename>.bzr (if it doesn't).\
+range <char1>-<char2>: only work on characters between <char1> and\
+  <char2> inclusive.\
+verbose: print brief progress reports on stderr.\
+version: print the version number of this program.\
 "
 
 
diff -x config.log -x config.status -ru tmp/fontutils-0.7/bzr/bzr_input.c work/fontutils-0.7/bzr/bzr_input.c
--- tmp/fontutils-0.7/bzr/bzr_input.c	2000-03-28 00:48:09.000000000 +0000
+++ work/fontutils-0.7/bzr/bzr_input.c	2012-10-28 19:41:29.351611712 +0000
@@ -67,7 +67,7 @@
 bzr_open_input_file (string filename)
 {
   if (bzr_input_file != NULL)
-    FATAL2 ("bzr_open_input_file: Attempt to open `%s', but `%s' is
+    FATAL2 ("bzr_open_input_file: Attempt to open `%s', but `%s' is \
 already open", filename, bzr_input_filename);
 
   bzr_input_filename = filename;
diff -x config.log -x config.status -ru tmp/fontutils-0.7/bzrto/main.c work/fontutils-0.7/bzrto/main.c
--- tmp/fontutils-0.7/bzrto/main.c	2000-03-28 00:48:09.000000000 +0000
+++ work/fontutils-0.7/bzrto/main.c	2012-10-28 19:41:29.351611712 +0000
@@ -458,40 +458,40 @@
 /* This is defined in version.c.  */
 extern string version_string;
 
-#define USAGE "Options:
+#define USAGE "Options:\
 <font_name> should be a filename, e.g., `cmr10'.  Any extension is ignored." \
-  GETOPT_USAGE								     \
-"concat <bzr_name_1>,<bzr_name_2>,...: concatenate the main input bzr file with
-  the given <bzr_name>s; if a character code exists in more than one
-  bzr file, it's the first occurrence that counts.
-ccc-file <filename>: read the CCC file <filename> (if <filename> has a
-  suffix) or <filename>.ccc (if it doesn't).  Default is <font_name>.
-encoding <filename>: specify the encoding file; if <filename> has no
-  suffix, use <filename>.enc, otherwise just <filename>.  Default is to
-  try to guess the encoding from the coding_scheme string in the TFM
-  file if exists, else to use the default " DEFAULT_ENCODING ".
-help: print this message.
-metafont: translate the font to a Metafont program.
-mf: same as `metafont'.
-oblique-angle <angle-in-degrees>: angle from the vertical by which to
-  slant the shapes; default is 0.
-output-file <filename>: output to <filename> (if it has a suffix) or to
-  <filename>.<font format> (if it doesn't), where the <font format> is
-  `mf', `gsf', etc.  <filename> cannot have a suffix if more than one of
-  `metafont', `pstype1' and `pstype3' options are give.  Default is
-  <font_name> with a trailing number removed.
-ps-font-info <name>:<value>,...: assign each <value> to the
-  corresponding <name> when outputting a PostScript font.  Possible
-  <name>s: FontName, FamilyName, Weight, ItalicAngle, isFixedPitch,
-  UnderlinePosition, UnderlineThickness, UniqueID, version.  Case is
-  significant.  See the manual for more details.
-pstype1: translate the font to (unencrypted) PostScript Type 1 font format.
-pstype3: translate the font to PostScript Type 3 font format.
-range <char1>-<char2>: only work on characters between <char1> and
-  <char2> inclusive.
-text: translate the font to human-readable text; write to stdout.
-verbose: print brief progress reports.
-version: print the version number of this program.
+  GETOPT_USAGE\
+"concat <bzr_name_1>,<bzr_name_2>,...: concatenate the main input bzr file with\
+  the given <bzr_name>s; if a character code exists in more than one\
+  bzr file, it's the first occurrence that counts.\
+ccc-file <filename>: read the CCC file <filename> (if <filename> has a\
+  suffix) or <filename>.ccc (if it doesn't).  Default is <font_name>.\
+encoding <filename>: specify the encoding file; if <filename> has no\
+  suffix, use <filename>.enc, otherwise just <filename>.  Default is to\
+  try to guess the encoding from the coding_scheme string in the TFM\
+  file if exists, else to use the default " DEFAULT_ENCODING ".\
+help: print this message.\
+metafont: translate the font to a Metafont program.\
+mf: same as `metafont'.\
+oblique-angle <angle-in-degrees>: angle from the vertical by which to\
+  slant the shapes; default is 0.\
+output-file <filename>: output to <filename> (if it has a suffix) or to\
+  <filename>.<font format> (if it doesn't), where the <font format> is\
+  `mf', `gsf', etc.  <filename> cannot have a suffix if more than one of\
+  `metafont', `pstype1' and `pstype3' options are give.  Default is\
+  <font_name> with a trailing number removed.\
+ps-font-info <name>:<value>,...: assign each <value> to the\
+  corresponding <name> when outputting a PostScript font.  Possible\
+  <name>s: FontName, FamilyName, Weight, ItalicAngle, isFixedPitch,\
+  UnderlinePosition, UnderlineThickness, UniqueID, version.  Case is\
+  significant.  See the manual for more details.\
+pstype1: translate the font to (unencrypted) PostScript Type 1 font format.\
+pstype3: translate the font to PostScript Type 3 font format.\
+range <char1>-<char2>: only work on characters between <char1> and\
+  <char2> inclusive.\
+text: translate the font to human-readable text; write to stdout.\
+verbose: print brief progress reports.\
+version: print the version number of this program.\
 "
 
 
diff -x config.log -x config.status -ru tmp/fontutils-0.7/charspace/main.c work/fontutils-0.7/charspace/main.c
--- tmp/fontutils-0.7/charspace/main.c	2000-03-28 00:48:09.000000000 +0000
+++ work/fontutils-0.7/charspace/main.c	2012-10-28 19:41:29.351611712 +0000
@@ -202,35 +202,35 @@
 /* This is defined in version.c.  */
 extern string version_string;
 
-#define USAGE "Options:
-<font_name> should be a filename, possibly with a resolution, e.g.,
-  `cmr10' or `cmr10.300'.\n"						\
-  GETOPT_USAGE								\
-"cmi-files <file1>,<file2>,...: read the CMI files
-  `<file1>.<dpi>cmi', `<file2>.<dpi>cmi', etc., after reading
-  `common.cmi'; default is `<font-name>.<dpi>cmi'.  The <dpi>cmi is not
-  appended to any of the <file>s which already have a suffix.
-dpi <unsigned>: use this resolution; default is 300.
-encoding <filename>: read ligature and other encoding information
-  from <filename>.enc; there is no default.  (A TFM file <font-name>.tfm
-  is also read, if it exists.)
-fontdimens <fontdimen>:<real>,<fontdimen>:<real>,...: assign <value>
-  to each <fontdimen> given, when outputting a TFM file.  A <fontdimen>
-  can be either one of the standard names (in either upper or
-  lowercase), or a number between 1 and 30.  Each <real> is taken to be
-  in points (except in the case of the <fontdimen> `SLANT' (parameter
-  1), which is a dimensionless number).
-no-gf: don't output a GF file.
-output-file <filename>: write the TFM file to `<filename>.tfm' and the
-  GF file to `<filename>.<dpi>gf'; <filename> shouldn't have a suffix;
-  default is <font-name>.tfm and <font-name>.<dpi>gf, or, if those would
-  overwrite the input, those preceded by `x'.
-range <char1>-<char2>: only process characters between <char1> and
-  <char2>, inclusive. 
-verbose: print brief progress reports on stdout.
-version: print the version number of this program.
-xheight-char <charcode>: use the height of this character as the
-  default x-height (for the TFM output); default is 120 (ASCII `x').
+#define USAGE "Options:\
+<font_name> should be a filename, possibly with a resolution, e.g.,\
+  `cmr10' or `cmr10.300'.\n"\
+  GETOPT_USAGE\
+"cmi-files <file1>,<file2>,...: read the CMI files\
+  `<file1>.<dpi>cmi', `<file2>.<dpi>cmi', etc., after reading\
+  `common.cmi'; default is `<font-name>.<dpi>cmi'.  The <dpi>cmi is not\
+  appended to any of the <file>s which already have a suffix.\
+dpi <unsigned>: use this resolution; default is 300.\
+encoding <filename>: read ligature and other encoding information\
+  from <filename>.enc; there is no default.  (A TFM file <font-name>.tfm\
+  is also read, if it exists.)\
+fontdimens <fontdimen>:<real>,<fontdimen>:<real>,...: assign <value>\
+  to each <fontdimen> given, when outputting a TFM file.  A <fontdimen>\
+  can be either one of the standard names (in either upper or\
+  lowercase), or a number between 1 and 30.  Each <real> is taken to be\
+  in points (except in the case of the <fontdimen> `SLANT' (parameter\
+  1), which is a dimensionless number).\
+no-gf: don't output a GF file.\
+output-file <filename>: write the TFM file to `<filename>.tfm' and the\
+  GF file to `<filename>.<dpi>gf'; <filename> shouldn't have a suffix;\
+  default is <font-name>.tfm and <font-name>.<dpi>gf, or, if those would\
+  overwrite the input, those preceded by `x'.\
+range <char1>-<char2>: only process characters between <char1> and\
+  <char2>, inclusive.\
+verbose: print brief progress reports on stdout.\
+version: print the version number of this program.\
+xheight-char <charcode>: use the height of this character as the\
+  default x-height (for the TFM output); default is 120 (ASCII `x').\
 "
 
 static string
diff -x config.log -x config.status -ru tmp/fontutils-0.7/fontconvert/main.c work/fontutils-0.7/fontconvert/main.c
--- tmp/fontutils-0.7/fontconvert/main.c	2000-03-28 00:48:09.000000000 +0000
+++ work/fontutils-0.7/fontconvert/main.c	2012-10-28 19:41:29.351611712 +0000
@@ -363,71 +363,71 @@
 /* This is defined in version.c.  */
 extern string version_string;
 
-#define USAGE "Options:
-<font_name> should be a filename, possibly with a resolution, e.g.,
-  `cmr10' or `cmr10.300'.\n"						\
-  GETOPT_USAGE								\
-"baseline-adjust <char1>:<integer1>,<char2>:<integer2>,...: move the baseline
-  of each <char> by the corresponding <integer>.  A positive number
-  moves the baseline up, a negative one down.
-column-split <char>@<column1>,...,<columnN>: split the character with
-  code <char> (before remapping) before each of the <column>s, producing n
-  new characters, with codes <char>, <char> + 1, ..., <char> + n, whose
-  bitmaps go from 0 to <column1> - 1 (inclusive), then <column1> to
-  <column2> - 1, ..., from <columnN> to the bitmap width.
-  Give the <column>s in bitmap coordinates, i.e., starting at zero.
-  To split more than one character, give this option for each.
-concat <font_name>,<font_name>,...: concatenate the main input font with
-  the given <font_name>s; if a character code exists in more than one
-  font, it's the first occurrence that counts.
-designsize <real>: use this as the design size for both the GF and TFM
-  output files, if any, unless overridden by `designsize' in the
-  `tfm-header' option.
-dpi <unsigned>: use a resolution of <unsigned>; default is 300.
-encoding <filename>: read encoding information for the character specs
-  from `<filename>.enc'; there is no default.  Must come before any
-  options which use character specs.
-epsf: output each character as an Encapsulated PostScript file named
-  <font_name>-<code>.eps, where <code> is the character code in decimal.
-filter-passes <unsigned>: do the filtering this many times on each
-  character; default is 0.
-filter-size <unsigned>: half the size of the filter cell, i.e., a side
-  is this number * 2 + 1; default is 1.
-filter-threshold <real>: if the average of the pixels in the filter cell
-  is greater than this, change the pixel; default is .5.
-fontdimens <fontdimen>:<real>,<fontdimen>:<real>,...: assign each <real>
-  to the corresponding <fontdimen> when outputting a TFM file.  A
-  <fontdimen> can be either one of the standard names (in either upper
-  or lowercase), or a number between 1 and 30.  Each <real> is taken to
-  be in points (except in the case of the <fontdimen> `slant' (parameter
-  1), which is a dimensionless number).
-gf: write a GF file to `<font_name>.<dpi>gf'.  If this would overwrite the
-  input file, write to `x<font_name>.<dpi>gf' instead.
-help: print this message.
-omit <char1>,<char2>,...: omit the characters with the given codes or names
-  (before remapping) from the output.
-output-file <filename>: use <filename> as the output filename if it has
-   a suffix, and as the base of the output files if it doesn't.  It
-   cannot have a suffix if using the `epsf' option, or both the `gf' and the
-   `tfm' option.  Default is the base part of the input font name.
-random <real>: move each pixel a (uniformly) random distance between
-   -<real> and <real> in both x and y; default is 0.
-random-threshold <real>: if randomizing, do not move pixels with
-  probability <real>; default is 0.2.
-range <char1>-<char2>: only process characters between <char1> and
-  <char2> in the input font, inclusive.
-remap <char1>:<char2>,<char1>:<char2>,...: for each pair, make the input
-  character with code <char1> have code <char2> in the output.
-text: output the font to stdout as plain text, using `*'s and ` 's.
-tfm: write a TFM file to `<font_name>.tfm'.
-tfm-header: <header-item>:<value>,<header-item>:<value>,...: assign each
-  <value> to the corresponding <header-item> when outputting a TFM file.
-  A <header-item> is one of `checksum', `designsize' or `codingscheme',
-  with casefolding. `checksum' requires an unsigned integer,
-  `designsize' a real, with 1.0 <= designsize < 2048, and `codingscheme'
-  a string of length less than 40 containing no parens or commas.
-verbose: print brief progress reports on stdout.
-version: print the version number of this program.
+#define USAGE "Options:\
+<font_name> should be a filename, possibly with a resolution, e.g.,\
+  `cmr10' or `cmr10.300'.\n"\
+  GETOPT_USAGE\
+"baseline-adjust <char1>:<integer1>,<char2>:<integer2>,...: move the baseline\
+  of each <char> by the corresponding <integer>.  A positive number\
+  moves the baseline up, a negative one down.\
+column-split <char>@<column1>,...,<columnN>: split the character with\
+  code <char> (before remapping) before each of the <column>s, producing n\
+  new characters, with codes <char>, <char> + 1, ..., <char> + n, whose\
+  bitmaps go from 0 to <column1> - 1 (inclusive), then <column1> to\
+  <column2> - 1, ..., from <columnN> to the bitmap width.\
+  Give the <column>s in bitmap coordinates, i.e., starting at zero.\
+  To split more than one character, give this option for each.\
+concat <font_name>,<font_name>,...: concatenate the main input font with\
+  the given <font_name>s; if a character code exists in more than one\
+  font, it's the first occurrence that counts.\
+designsize <real>: use this as the design size for both the GF and TFM\
+  output files, if any, unless overridden by `designsize' in the\
+  `tfm-header' option.\
+dpi <unsigned>: use a resolution of <unsigned>; default is 300.\
+encoding <filename>: read encoding information for the character specs\
+  from `<filename>.enc'; there is no default.  Must come before any\
+  options which use character specs.\
+epsf: output each character as an Encapsulated PostScript file named\
+  <font_name>-<code>.eps, where <code> is the character code in decimal.\
+filter-passes <unsigned>: do the filtering this many times on each\
+  character; default is 0.\
+filter-size <unsigned>: half the size of the filter cell, i.e., a side\
+  is this number * 2 + 1; default is 1.\
+filter-threshold <real>: if the average of the pixels in the filter cell\
+  is greater than this, change the pixel; default is .5.\
+fontdimens <fontdimen>:<real>,<fontdimen>:<real>,...: assign each <real>\
+  to the corresponding <fontdimen> when outputting a TFM file.  A\
+  <fontdimen> can be either one of the standard names (in either upper\
+  or lowercase), or a number between 1 and 30.  Each <real> is taken to\
+  be in points (except in the case of the <fontdimen> `slant' (parameter\
+  1), which is a dimensionless number).\
+gf: write a GF file to `<font_name>.<dpi>gf'.  If this would overwrite the\
+  input file, write to `x<font_name>.<dpi>gf' instead.\
+help: print this message.\
+omit <char1>,<char2>,...: omit the characters with the given codes or names\
+  (before remapping) from the output.\
+output-file <filename>: use <filename> as the output filename if it has\
+   a suffix, and as the base of the output files if it doesn't.  It\
+   cannot have a suffix if using the `epsf' option, or both the `gf' and the\
+   `tfm' option.  Default is the base part of the input font name.\
+random <real>: move each pixel a (uniformly) random distance between\
+   -<real> and <real> in both x and y; default is 0.\
+random-threshold <real>: if randomizing, do not move pixels with\
+  probability <real>; default is 0.2.\
+range <char1>-<char2>: only process characters between <char1> and\
+  <char2> in the input font, inclusive.\
+remap <char1>:<char2>,<char1>:<char2>,...: for each pair, make the input\
+  character with code <char1> have code <char2> in the output.\
+text: output the font to stdout as plain text, using `*'s and ` 's.\
+tfm: write a TFM file to `<font_name>.tfm'.\
+tfm-header: <header-item>:<value>,<header-item>:<value>,...: assign each\
+  <value> to the corresponding <header-item> when outputting a TFM file.\
+  A <header-item> is one of `checksum', `designsize' or `codingscheme',\
+  with casefolding. `checksum' requires an unsigned integer,\
+  `designsize' a real, with 1.0 <= designsize < 2048, and `codingscheme'\
+  a string of length less than 40 containing no parens or commas.\
+verbose: print brief progress reports on stdout.\
+version: print the version number of this program.\
 "
 
 /* We return the name of the font to process.  */
diff -x config.log -x config.status -ru tmp/fontutils-0.7/gf/gf_input.c work/fontutils-0.7/gf/gf_input.c
--- tmp/fontutils-0.7/gf/gf_input.c	2000-03-28 00:48:09.000000000 +0000
+++ work/fontutils-0.7/gf/gf_input.c	2012-10-28 19:41:29.354945047 +0000
@@ -94,7 +94,7 @@
 gf_open_input_file (string filename)
 {
   if (gf_input_file != NULL)
-    FATAL2 ("gf_open_input_file: Attempt to open `%s', but `%s' is
+    FATAL2 ("gf_open_input_file: Attempt to open `%s', but `%s' is \
 already open", filename, gf_input_filename);
 
   gf_input_filename = filename;
diff -x config.log -x config.status -ru tmp/fontutils-0.7/gsrenderfont/main.c work/fontutils-0.7/gsrenderfont/main.c
--- tmp/fontutils-0.7/gsrenderfont/main.c	2000-03-28 00:48:09.000000000 +0000
+++ work/fontutils-0.7/gsrenderfont/main.c	2012-10-28 19:41:29.354945047 +0000
@@ -139,15 +139,15 @@
 /* This is defined in version.c.  */
 extern string version_string;
 
-#define USAGE "Options:
-  <font_name> should be a base filename, e.g., `cmr10'."		\
-    GETOPT_USAGE							\
-"help: print this message.
-output-file <filename>: write to <filename>.bbs if <filename> has no
-  suffix, and to <filename> if it has.  Default is standard output.
-trace-scanlines: show every scanline as we read it.
-verbose: output progress reports to stderr.
-version: print the version number of this program.
+#define USAGE "Options:\
+  <font_name> should be a base filename, e.g., `cmr10'."\
+    GETOPT_USAGE\
+"help: print this message.\
+output-file <filename>: write to <filename>.bbs if <filename> has no\
+  suffix, and to <filename> if it has.  Default is standard output.\
+trace-scanlines: show every scanline as we read it.\
+verbose: output progress reports to stderr.\
+version: print the version number of this program.\
 "
 
 static string
diff -x config.log -x config.status -ru tmp/fontutils-0.7/imageto/main.c work/fontutils-0.7/imageto/main.c
--- tmp/fontutils-0.7/imageto/main.c	2000-03-28 00:48:09.000000000 +0000
+++ work/fontutils-0.7/imageto/main.c	2012-10-28 19:41:29.354945047 +0000
@@ -220,41 +220,41 @@
 /* This is defined in version.c.  */
 extern string version_string;
 
-#define USAGE "Options:
-<font_name> should be a base filename, e.g., `ggmr'.  (More properly, it
-is an <image_name>, not a <font_name>.)" 				\
-  GETOPT_USAGE								\
-"baselines <row1>,<row2>,...: define the baselines for each image row.
-  The baseline of the first image row is taken to be scanline <row1>, etc.
-designsize <real>: set the designsize of the font to <real>; default is 10.0.
-dpi <unsigned>: resolution (required for pbm input).
-encoding <filename>: read ligature and other encoding information
-  from `<filename>.enc'; the default is to assign successive character codes.
-epsf: write the image as an Encapsulated PostScript file, instead of a
-  bitmap font.
-help: print this message.
-ifi-file <filename>: use <filename>.ifi (if <filename doesn't have a
-  suffix; otherwise use <filename>) for the IFI filename; default is
-  `<font_name>.ifi'.
-input-format <format>: specify format of input image; <format> must be
-  one of `pbm' or `img'.
-nchars <unsigned>: only write the first <unsigned> (approximately)
-  characters to the font; default is infinity.
-output-file <filename>: write to <filename> if <filename> has a suffix.
-  If <filename> doesn't have a suffix, then if writing strips, write to
-  <filename>sp.<dpi>gf and to <filename>.<dpi>gf if not.  By default,
-  use <font_name> for <filename>.
-print-clean-info: print gray values for the bounding boxes that are
-  considered for cleaning.  This implies `-verbose'.
-print-guidelines: print the numbers of the top and bottom rows (in that
-  order) of each character.  This implies `-verbose'.
-range <char1>-<char2>: only process characters between <char1> and
-  <char2>, inclusive. 
-strips: take a constant number of scanlines as each character,
-  instead of using an IFI file to analyze the image.
-trace-scanlines: show every scanline as we read it.
-verbose: output progress reports.
-version: print the version number of this program.
+#define USAGE "Options:\
+<font_name> should be a base filename, e.g., `ggmr'.  (More properly, it\
+is an <image_name>, not a <font_name>.)"\
+  GETOPT_USAGE\
+"baselines <row1>,<row2>,...: define the baselines for each image row.\
+  The baseline of the first image row is taken to be scanline <row1>, etc.\
+designsize <real>: set the designsize of the font to <real>; default is 10.0.\
+dpi <unsigned>: resolution (required for pbm input).\
+encoding <filename>: read ligature and other encoding information\
+  from `<filename>.enc'; the default is to assign successive character codes.\
+epsf: write the image as an Encapsulated PostScript file, instead of a\
+  bitmap font.\
+help: print this message.\
+ifi-file <filename>: use <filename>.ifi (if <filename doesn't have a\
+  suffix; otherwise use <filename>) for the IFI filename; default is\
+  `<font_name>.ifi'.\
+input-format <format>: specify format of input image; <format> must be\
+  one of `pbm' or `img'.\
+nchars <unsigned>: only write the first <unsigned> (approximately)\
+  characters to the font; default is infinity.\
+output-file <filename>: write to <filename> if <filename> has a suffix.\
+  If <filename> doesn't have a suffix, then if writing strips, write to\
+  <filename>sp.<dpi>gf and to <filename>.<dpi>gf if not.  By default,\
+  use <font_name> for <filename>.\
+print-clean-info: print gray values for the bounding boxes that are\
+  considered for cleaning.  This implies `-verbose'.\
+print-guidelines: print the numbers of the top and bottom rows (in that\
+  order) of each character.  This implies `-verbose'.\
+range <char1>-<char2>: only process characters between <char1> and\
+  <char2>, inclusive.\
+strips: take a constant number of scanlines as each character,\
+  instead of using an IFI file to analyze the image.\
+trace-scanlines: show every scanline as we read it.\
+verbose: output progress reports.\
+version: print the version number of this program.\
 "
 
 static string
diff -x config.log -x config.status -ru tmp/fontutils-0.7/imgrotate/main.c work/fontutils-0.7/imgrotate/main.c
--- tmp/fontutils-0.7/imgrotate/main.c	2000-03-28 00:48:09.000000000 +0000
+++ work/fontutils-0.7/imgrotate/main.c	2012-10-28 19:41:29.354945047 +0000
@@ -259,18 +259,18 @@
 /* This is defined in version.c.  */
 extern string version_string;
 
-#define USAGE "Options:
-  <font_name> should be a base filename, e.g., `gmr'.  It is extended
-    with `.img'."							\
-  GETOPT_USAGE								\
-"flip: rotate the image 180 degrees.
-help: print this message.
-output-file <filename>: write the output to <filename>, extended with
-   `.img' if <filename> does not have a suffix.  The default is the input
-   filename, prepended with `x' if that would overwrite the input file.
-rotate-clockwise: rotate the image 90 degrees clockwise.
-verbose: output progress reports to stdout.
-version: print the version number of this program.
+#define USAGE "Options:\
+  <font_name> should be a base filename, e.g., `gmr'.  It is extended\
+    with `.img'."\
+  GETOPT_USAGE\
+"flip: rotate the image 180 degrees.\
+help: print this message.\
+output-file <filename>: write the output to <filename>, extended with\
+   `.img' if <filename> does not have a suffix.  The default is the input\
+   filename, prepended with `x' if that would overwrite the input file.\
+rotate-clockwise: rotate the image 90 degrees clockwise.\
+verbose: output progress reports to stdout.\
+version: print the version number of this program.\
 "
 
 static string
diff -x config.log -x config.status -ru tmp/fontutils-0.7/include/cmdline.h work/fontutils-0.7/include/cmdline.h
--- tmp/fontutils-0.7/include/cmdline.h	2000-03-28 00:48:09.000000000 +0000
+++ work/fontutils-0.7/include/cmdline.h	2012-10-28 19:41:29.354945047 +0000
@@ -114,9 +114,9 @@
   while (0)
 
 #define GETOPT_USAGE \
-"  You can use `--' or `-' to start an option.
-  You can use any unambiguous abbreviation for an option name.
-  You can separate option names and values with `=' or ` '.
+" You can use `--' or `-' to start an option. \
+  You can use any unambiguous abbreviation for an option name. \
+  You can separate option names and values with `=' or ` '. \
 "
 
 /* What to pass to `strtok' to separate different arguments to an
diff -x config.log -x config.status -ru tmp/fontutils-0.7/lib/fmod.c work/fontutils-0.7/lib/fmod.c
--- tmp/fontutils-0.7/lib/fmod.c	1992-03-25 13:52:25.000000000 +0000
+++ work/fontutils-0.7/lib/fmod.c	2012-10-28 19:41:29.354945047 +0000
@@ -50,7 +50,7 @@
 #include <math.h> /* changed from "mathimpl.h" --karl */
 
 #if !defined(vax) && !defined(tahoe)
-extern int isnan(),finite();
+extern int (isnan)(),(finite)();
 #endif	/* !defined(vax) && !defined(tahoe) */
 extern double frexp(),ldexp(),fabs();
 
@@ -69,7 +69,7 @@
 	if (y == (double)0
 #if 0 /* removed this --karl */
 #if !defined(vax) && !defined(tahoe)	/* per "fmod" manual entry, SunOS 4.0 */
-		|| isnan(y) || !finite(x)
+	    || (isnan)(y) || !(finite)(x)
 #endif	/* !defined(vax) && !defined(tahoe) */
 #endif
             )
diff -x config.log -x config.status -ru tmp/fontutils-0.7/limn/main.c work/fontutils-0.7/limn/main.c
--- tmp/fontutils-0.7/limn/main.c	2000-03-28 00:48:09.000000000 +0000
+++ work/fontutils-0.7/limn/main.c	2012-10-28 19:41:29.354945047 +0000
@@ -126,74 +126,74 @@
 /* This is defined in version.c.  */
 extern string version_string;
 
-#define USAGE "Options:
-<font_name> should be a filename, possibly with a resolution, e.g.,
-  `cmr10' or `cmr10.300'.\n"						\
-  GETOPT_USAGE								\
-"align-threshold <real>: if either coordinate of the endpoints on a
-  spline is closer than this, make them the same; default is .5.
-corner-always-threshold <angle-in-degrees>: if the angle at a pixel is
-  less than this, it is considered a corner, even if it is within
-  `corner-surround' pixels of another corner; default is 60.
-corner-surround <unsigned>: number of pixels on either side of a
-  point to consider when determining if that point is a corner; default
-  is 4.
-corner-threshold <angle-in-degrees>: if a pixel, its predecessor(s),
-  and its successor(s) meet at an angle smaller than this, it's a
-  corner; default is 100.
-display-continue: do not wait for you to hit return after displaying
-  each character.
-display-grid-size <unsigned>: number of expanded pixels between the grid
-  lines; default is 10. 
-display-pixel-size <unsigned>: length of one side of the square that
-  each pixel expands into; default is 9.
-display-rectangle-size <unsigned>: length of one side of the square
-  we draw to represent pixels; default is 6.  Must be less than
-  display-pixel-size. 
-do-display: show some information in a window, online.
-dpi <unsigned>: use a resolution of <unsigned>; default is 300.
-error-threshold <real>: subdivide fitted curves that are off by
-  more pixels than this; default is 2.0.
-filter-alternative-surround <unsigned>: another choice for
-  filter-surround; default is 1.
-filter-epsilon <real>: if the angles using filter-surround and
-   filter-alternative-surround points differ by more than this, use the
-   latter; default is 10.0.
-filter-iterations <unsigned>: smooth the curve this many times
-  before fitting; default is 4.
-filter-percent <percent>: when filtering, use the old point plus this
-  much of neighbors to determine the new point; default is 33.
-filter-surround <unsigned>: number of pixels on either side of a point
-  to consider when filtering that point; default is 2.
-help: print this message.
-keep-knees: do not remove ``knees''---points on the inside of the
-  outline that are between two others.
-line-reversion-threshold <real>: if a spline is closer to a straight
-   line than this, weighted by the square of the curve length, keep it a
-   straight line even if it is a list with curves; default is .01.
-line-threshold <real>: if the spline is not more than this far away
-  from the straight line defined by its endpoints, 
-  then output a straight line; default is 1.
-log: write detailed progress reports to <font_name>.log.
-output-file <filename>: write to <filename> if it has a suffix and to
-  `<filename>.bzr' if it doesn't.  Default is `<font_name>.bzr'.
-range <char1>-<char2>: only process characters between <char1> and
-  <char2>, inclusive. 
-reparameterize-improve <percent>: if reparameterization
-  doesn't improve the fit by this much, as a percentage, stop; default
-  is 10.
-reparameterize-threshold <real>: if an initial fit is off by more
-  pixels than this, don't bother to reparameterize; default is 30.
-subdivide-search <percent>: percentage of the curve from the initial
-  guess for a subdivision point to look for a better one; default is 10.
-subdivide-surround <unsigned>: number of points on either side of a
-  point to consider when looking for a subdivision point; default is 4.
-subdivide-threshold <real>: if a point is this close or closer to a
-  straight line, subdivide there; default is .03.
-tangent-surround <unsigned>: number of points on either side of a
-  point to consider when computing the tangent at that point; default is 3.
-verbose: print brief progress reports on stderr.
-version: print the version number of this program.
+#define USAGE "Options:\
+<font_name> should be a filename, possibly with a resolution, e.g.,\
+  `cmr10' or `cmr10.300'.\n"\
+  GETOPT_USAGE\
+"align-threshold <real>: if either coordinate of the endpoints on a\
+  spline is closer than this, make them the same; default is .5.\
+corner-always-threshold <angle-in-degrees>: if the angle at a pixel is\
+  less than this, it is considered a corner, even if it is within\
+  `corner-surround' pixels of another corner; default is 60.\
+corner-surround <unsigned>: number of pixels on either side of a\
+  point to consider when determining if that point is a corner; default\
+  is 4.\
+corner-threshold <angle-in-degrees>: if a pixel, its predecessor(s),\
+  and its successor(s) meet at an angle smaller than this, it's a\
+  corner; default is 100.\
+display-continue: do not wait for you to hit return after displaying\
+  each character.\
+display-grid-size <unsigned>: number of expanded pixels between the grid\
+  lines; default is 10.\
+display-pixel-size <unsigned>: length of one side of the square that\
+  each pixel expands into; default is 9.\
+display-rectangle-size <unsigned>: length of one side of the square\
+  we draw to represent pixels; default is 6.  Must be less than\
+  display-pixel-size.\
+do-display: show some information in a window, online.\
+dpi <unsigned>: use a resolution of <unsigned>; default is 300.\
+error-threshold <real>: subdivide fitted curves that are off by\
+  more pixels than this; default is 2.0.\
+filter-alternative-surround <unsigned>: another choice for\
+  filter-surround; default is 1.\
+filter-epsilon <real>: if the angles using filter-surround and\
+   filter-alternative-surround points differ by more than this, use the\
+   latter; default is 10.0.\
+filter-iterations <unsigned>: smooth the curve this many times\
+  before fitting; default is 4.\
+filter-percent <percent>: when filtering, use the old point plus this\
+  much of neighbors to determine the new point; default is 33.\
+filter-surround <unsigned>: number of pixels on either side of a point\
+  to consider when filtering that point; default is 2.\
+help: print this message.\
+keep-knees: do not remove ``knees''---points on the inside of the\
+  outline that are between two others.\
+line-reversion-threshold <real>: if a spline is closer to a straight\
+   line than this, weighted by the square of the curve length, keep it a\
+   straight line even if it is a list with curves; default is .01.\
+line-threshold <real>: if the spline is not more than this far away\
+  from the straight line defined by its endpoints,\
+  then output a straight line; default is 1.\
+log: write detailed progress reports to <font_name>.log.\
+output-file <filename>: write to <filename> if it has a suffix and to\
+  `<filename>.bzr' if it doesn't.  Default is `<font_name>.bzr'.\
+range <char1>-<char2>: only process characters between <char1> and\
+  <char2>, inclusive.\
+reparameterize-improve <percent>: if reparameterization\
+  doesn't improve the fit by this much, as a percentage, stop; default\
+  is 10.\
+reparameterize-threshold <real>: if an initial fit is off by more\
+  pixels than this, don't bother to reparameterize; default is 30.\
+subdivide-search <percent>: percentage of the curve from the initial\
+  guess for a subdivision point to look for a better one; default is 10.\
+subdivide-surround <unsigned>: number of points on either side of a\
+  point to consider when looking for a subdivision point; default is 4.\
+subdivide-threshold <real>: if a point is this close or closer to a\
+  straight line, subdivide there; default is .03.\
+tangent-surround <unsigned>: number of points on either side of a\
+  point to consider when computing the tangent at that point; default is 3.\
+verbose: print brief progress reports on stderr.\
+version: print the version number of this program.\
 "
 
 /* We return the name of the font to process.  */
diff -x config.log -x config.status -ru tmp/fontutils-0.7/pbm/libpbm1.c work/fontutils-0.7/pbm/libpbm1.c
--- tmp/fontutils-0.7/pbm/libpbm1.c	2000-03-30 01:06:51.000000000 +0000
+++ work/fontutils-0.7/pbm/libpbm1.c	2012-10-28 19:41:29.354945047 +0000
@@ -14,7 +14,9 @@
 
 #include "pbm.h"
 #include "libpbm.h"
-#include <varargs.h>
+// GCC no longer implements varargs.h
+//#include <varargs.h>
+#include <stdarg.h>
 
 #if 0 /* karl */
 extern char *malloc ();
diff -x config.log -x config.status -ru tmp/fontutils-0.7/tfm/tfm_input.c work/fontutils-0.7/tfm/tfm_input.c
--- tmp/fontutils-0.7/tfm/tfm_input.c	2000-03-28 00:48:09.000000000 +0000
+++ work/fontutils-0.7/tfm/tfm_input.c	2012-10-28 19:41:29.358278382 +0000
@@ -74,14 +74,14 @@
 static real tfm_get_scaled_fix (void);
 static void get_tfm_header (void);
 static void get_tfm_params (void);
-
+
 /* Routines to start and finish reading a file.  (For the user to call.)  */
 
 boolean
 tfm_open_input_file (string filename)
 {
   if (tfm_input_file != NULL)
-    FATAL2 ("tfm_open_input_file: Attempt to open `%s', but `%s' is
+    FATAL2 ("tfm_open_input_file: Attempt to open `%s', but `%s' is\
 already open", filename, tfm_input_name);
 
   tfm_input_name = filename;
@@ -264,7 +264,7 @@
      than we can deal with.  */
   if (tfm_header.param_word_count > TFM_MAX_FONTDIMENS)
     {
-      WARNING3 ("%s: TFM file has %u parameters, which is more than the
+      WARNING3 ("%s: TFM file has %u parameters, which is more than the\
 %u I can handle",
                 tfm_input_name, tfm_header.param_word_count,
                 TFM_MAX_FONTDIMENS);
@@ -384,9 +384,9 @@
 #define GET_CHAR_DIMEN(d)						\
    if (d##_index != 0)							\
      {									\
-       TFM_FSEEK (tfm_header.##d##_pos + d##_index*4, SEEK_SET);	\
-       tfm_char.fix_##d = TFM_GET_FOUR ();				\
-       tfm_char.##d = fix_to_real (tfm_char.fix_##d)			\
+       TFM_FSEEK (tfm_header.d##_pos + d##_index*4, SEEK_SET);	\
+       tfm_char.d = TFM_GET_FOUR ();				\
+       tfm_char.d = fix_to_real (tfm_char.d)			\
                       * global_info->design_size;			\
      }
 
@@ -403,9 +403,8 @@
 
   if (tracing_tfm_input)
     {
-      printf ("   width = %f, height = %f, ", tfm_char.width, tfm_char.height);
-      printf ("depth = %f, ic = %f.\n", tfm_char.depth,
-              tfm_char.italic_correction); 
+      printf ("width = %f, height = %f, ",tfm_char.width,tfm_char.height);
+      printf ("depth = %f, ic = %f.\n",tfm_char.depth,tfm_char.italic_correction);
     }
 
   if (tag == 1)
@@ -417,7 +416,7 @@
   /* We don't handle the other tags.  */
   return tfm_char;
 }
-
+
 /* Read a ligature/kern program at the current position, storing the
    result into *LIGATURE and *KERN.  We don't distinguish all the kinds
    of ligatures that Metafont can output.  */
diff -x config.log -x config.status -ru tmp/fontutils-0.7/widgets/Form.c work/fontutils-0.7/widgets/Form.c
--- tmp/fontutils-0.7/widgets/Form.c	1992-08-19 11:08:00.000000000 +0000
+++ work/fontutils-0.7/widgets/Form.c	2012-10-28 19:41:29.358278382 +0000
@@ -237,11 +237,54 @@
     }
     else {
 	(*((FormWidgetClass)w->core.widget_class)->form_class.layout)
-	    ( w, w->core.width, w->core.height );
+	    ( w, w->core.width, w->core.height, w->core.depth);
 	w->form.needs_relayout = False;
     }
 }
 
+static void LayoutChild(w)
+    Widget w;
+{
+    FormConstraints form = (FormConstraints)w->core.constraints;
+    Position x, y;
+    Widget ref;
+
+    switch (form->form.layout_state) {
+
+      case LayoutPending:
+        form->form.layout_state = LayoutInProgress;
+        break;
+
+      case LayoutDone:
+        return;
+
+      case LayoutInProgress:
+        {
+        String subs[2];
+        Cardinal num_subs = 2;
+        subs[0] = w->core.name;
+        subs[1] = w->core.parent->core.name;
+        XtAppWarningMsg(XtWidgetToApplicationContext(w),
+                        "constraintLoop","xawFormLayout","XawToolkitError",
+   "constraint loop detected while laying out child '%s' in FormWidget '%s'",
+                        subs, &num_subs);
+        return;
+        }
+    }
+    x = form->form.dx;
+    y = form->form.dy;
+    if ((ref = form->form.horiz_base) != (Widget)NULL) {
+        LayoutChild(ref);
+        x += ref->core.x + ref->core.width + (ref->core.border_width << 1);
+    }
+    if ((ref = form->form.vert_base) != (Widget)NULL) {
+        LayoutChild(ref);
+        y += ref->core.y + ref->core.height + (ref->core.border_width << 1);
+    }
+    XtMoveWidget( w, x, y );
+    form->form.layout_state = LayoutDone;
+}
+
 /* ARGSUSED */
 static Boolean Layout(fw, width, height)
     FormWidget fw;
@@ -251,7 +294,6 @@
     WidgetList children = fw->composite.children;
     Widget *childP;
     Position maxx, maxy;
-    static void LayoutChild();
     Boolean ret_val;
 
     for (childP = children; childP - children < num_children; childP++) {
@@ -321,51 +363,6 @@
     return ret_val;
 }
 
-
-static void LayoutChild(w)
-    Widget w;
-{
-    FormConstraints form = (FormConstraints)w->core.constraints;
-    Position x, y;
-    Widget ref;
-
-    switch (form->form.layout_state) {
-
-      case LayoutPending:
-	form->form.layout_state = LayoutInProgress;
-	break;
-
-      case LayoutDone:
-	return;
-
-      case LayoutInProgress:
-	{
-	String subs[2];
-	Cardinal num_subs = 2;
-	subs[0] = w->core.name;
-	subs[1] = w->core.parent->core.name;
-	XtAppWarningMsg(XtWidgetToApplicationContext(w),
-			"constraintLoop","xawFormLayout","XawToolkitError",
-   "constraint loop detected while laying out child '%s' in FormWidget '%s'",
-			subs, &num_subs);
-	return;
-	}
-    }
-    x = form->form.dx;
-    y = form->form.dy;
-    if ((ref = form->form.horiz_base) != (Widget)NULL) {
-	LayoutChild(ref);
-	x += ref->core.x + ref->core.width + (ref->core.border_width << 1);
-    }
-    if ((ref = form->form.vert_base) != (Widget)NULL) {
-	LayoutChild(ref);
-	y += ref->core.y + ref->core.height + (ref->core.border_width << 1);
-    }
-    XtMoveWidget( w, x, y );
-    form->form.layout_state = LayoutDone;
-}
-
-
 static Position TransformCoord(loc, old, new, type)
     register Position loc;
     Dimension old, new;
diff -x config.log -x config.status -ru tmp/fontutils-0.7/widgets/Viewport.c work/fontutils-0.7/widgets/Viewport.c
--- tmp/fontutils-0.7/widgets/Viewport.c	1992-09-02 22:51:02.000000000 +0000
+++ work/fontutils-0.7/widgets/Viewport.c	2012-10-28 19:41:29.358278382 +0000
@@ -348,7 +348,7 @@
 	    }
 	    GetGeometry( widget, child->core.width, child->core.height );
 	    (*((ViewportWidgetClass)w->core.widget_class)->form_class.layout)
-		( (FormWidget)w, w->core.width, w->core.height );
+		( (FormWidget)w, w->core.width, w->core.height, w->core.depth );
 	    /* %%% do we need to hide this child from Form?  */
 	}
     }
@@ -407,6 +407,81 @@
     RedrawThumbs(w);
 }
 
+/*      Function Name: ComputeWithForceBars
+ *      Description: Computes the layout give forcebars is set.
+ *      Arguments: widget - the viewport widget.
+ *                 query - whether or not to query the child.
+ *                 intended - the cache of the childs height is
+ *                            stored here ( USED AND RETURNED ).
+ *                 clip_width, clip_height - size of clip window.
+ *                                           (USED AND RETURNED ).
+ *      Returns: none.
+ */
+
+static void
+ComputeWithForceBars(widget, query, intended, clip_width, clip_height)
+Widget widget;
+Boolean query;
+XtWidgetGeometry * intended;
+int *clip_width, *clip_height;
+{
+    ViewportWidget w = (ViewportWidget)widget;
+    register Widget child = w->viewport.child;
+    XtWidgetGeometry preferred;
+
+/*
+ * If forcebars then needs = allows = has.
+ * Thus if needsvert is set it MUST have a scrollbar.
+ */
+
+    if (w->viewport.allowvert)
+        *clip_width -= w->viewport.vert_bar->core.width +
+                      w->viewport.vert_bar->core.border_width;
+
+    if (w->viewport.allowhoriz)
+        *clip_height -= w->viewport.horiz_bar->core.height +
+                       w->viewport.horiz_bar->core.border_width;
+
+    AssignMax( *clip_width, 1 );
+    AssignMax( *clip_height, 1 );
+
+    if (!w->viewport.allowvert) {
+        intended->height = *clip_height;
+        intended->request_mode = CWHeight;
+    }
+    if (!w->viewport.allowhoriz) {
+        intended->width = *clip_width;
+        intended->request_mode = CWWidth;
+    }
+
+    if ( query ) {
+        if ( (w->viewport.allowvert || w->viewport.allowhoriz) ) {
+            XtQueryGeometry( child, intended, &preferred );
+
+            if ( !(intended->request_mode & CWWidth) )
+                if ( preferred.request_mode & CWWidth )
+                    intended->width = preferred.width;
+                else
+                    intended->width = child->core.width;
+
+            if ( !(intended->request_mode & CWHeight) )
+                if ( preferred.request_mode & CWHeight )
+                    intended->height = preferred.height;
+                else
+                    intended->height = child->core.height;
+        }
+    }
+    else {
+        if (w->viewport.allowvert)
+            intended->height = child->core.height;
+        if (w->viewport.allowhoriz)
+            intended->width = child->core.width;
+    }
+
+    AssignMax(intended->width, *clip_width);
+    AssignMax(intended->height, *clip_height);
+}
+
 
 static void ComputeLayout(widget, query, destroy_scrollbars)
     Widget widget;		/* Viewport */
@@ -421,7 +496,6 @@
     Boolean needshoriz, needsvert;
     Dimension clip_width, clip_height;
     XtWidgetGeometry intended;
-    static void ComputeWithForceBars();
 
     if (child == (Widget) NULL) return;
 
@@ -607,81 +681,6 @@
     }
 }
 
-/*      Function Name: ComputeWithForceBars
- *      Description: Computes the layout give forcebars is set.
- *      Arguments: widget - the viewport widget.
- *                 query - whether or not to query the child.
- *                 intended - the cache of the childs height is
- *                            stored here ( USED AND RETURNED ).
- *                 clip_width, clip_height - size of clip window.
- *                                           (USED AND RETURNED ).
- *      Returns: none.
- */
-
-static void
-ComputeWithForceBars(widget, query, intended, clip_width, clip_height)
-Widget widget;
-Boolean query;
-XtWidgetGeometry * intended;
-int *clip_width, *clip_height;
-{
-    ViewportWidget w = (ViewportWidget)widget;
-    register Widget child = w->viewport.child;
-    XtWidgetGeometry preferred;
-
-/*
- * If forcebars then needs = allows = has.
- * Thus if needsvert is set it MUST have a scrollbar.
- */
-
-    if (w->viewport.allowvert)
-        *clip_width -= w->viewport.vert_bar->core.width +
-                      w->viewport.vert_bar->core.border_width;
-
-    if (w->viewport.allowhoriz)
-        *clip_height -= w->viewport.horiz_bar->core.height +
-		       w->viewport.horiz_bar->core.border_width;
-
-    AssignMax( *clip_width, 1 );
-    AssignMax( *clip_height, 1 );
-
-    if (!w->viewport.allowvert) {
-        intended->height = *clip_height;
-        intended->request_mode = CWHeight;
-    }
-    if (!w->viewport.allowhoriz) {
-        intended->width = *clip_width;
-        intended->request_mode = CWWidth;
-    }
-
-    if ( query ) {
-        if ( (w->viewport.allowvert || w->viewport.allowhoriz) ) { 
-	    XtQueryGeometry( child, intended, &preferred );
-	  
-	    if ( !(intended->request_mode & CWWidth) )
-	        if ( preferred.request_mode & CWWidth )
-		    intended->width = preferred.width;
-		else
-		    intended->width = child->core.width;
-
-	    if ( !(intended->request_mode & CWHeight) )
-	        if ( preferred.request_mode & CWHeight )
-		    intended->height = preferred.height;
-		else
-		    intended->height = child->core.height;
-	}
-    }
-    else {
-        if (w->viewport.allowvert)
-	    intended->height = child->core.height;
-	if (w->viewport.allowhoriz)
-	    intended->width = child->core.width;
-    }
-
-    AssignMax(intended->width, *clip_width);
-    AssignMax(intended->height, *clip_height);
-}
-
 static void Resize(widget)
     Widget widget;
 {
diff -x config.log -x config.status -ru tmp/fontutils-0.7/xbfe/main.c work/fontutils-0.7/xbfe/main.c
--- tmp/fontutils-0.7/xbfe/main.c	2000-03-30 00:50:55.000000000 +0000
+++ work/fontutils-0.7/xbfe/main.c	2012-10-28 19:41:29.358278382 +0000
@@ -421,22 +421,22 @@
 /* This is defined in version.c.  */
 extern string version_string;
 
-#define USAGE "Options:
-<font_name> should be a filename, possibly with a resolution, e.g.,
-  `cmr10' or `cmr10.300'.\n"						\
-  GETOPT_USAGE 								\
-"  The standard X toolkit options are also accepted.  The class name is `XBfe'.
-dpi <unsigned>: use this resolution; default is 300.
-expansion <unsigned>: each pixel in the bitmap will be this many pixels
-  square on the display; default is 12.  You can't use `=' here to
-  separate the option name and value.  You can set this value by setting
-  a resource `expansion' in your .Xdefaults file.
-initial-char <char>: start up displaying the character <char>; default is
-  the character in the font with the smallest code.
-help: print this message.
-output-file <filename>: use <filename> as the output file; default is
-  `<font_name>.<dpi>gf' and `<font_name>.tfm'.
-version: print the version number of this program.
+#define USAGE "Options:\
+<font_name> should be a filename, possibly with a resolution, e.g.,\
+  `cmr10' or `cmr10.300'.\n"\
+  GETOPT_USAGE\
+"  The standard X toolkit options are also accepted.  The class name is `XBfe'.\
+dpi <unsigned>: use this resolution; default is 300.\
+expansion <unsigned>: each pixel in the bitmap will be this many pixels\
+  square on the display; default is 12.  You can't use `=' here to\
+  separate the option name and value.  You can set this value by setting\
+  a resource `expansion' in your .Xdefaults file.\
+initial-char <char>: start up displaying the character <char>; default is\
+  the character in the font with the smallest code.\
+help: print this message.\
+output-file <filename>: use <filename> as the output file; default is\
+  `<font_name>.<dpi>gf' and `<font_name>.tfm'.\
+version: print the version number of this program.\
 "
 
 static string
